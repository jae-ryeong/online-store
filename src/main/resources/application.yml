spring:
  profiles:
    active: ${PROFILES_ACTIVE}
---
spring:
  config:
    activate:
      on-profile: dev
  docker:
    compose:
      file: docker-compose.dev.yml

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_USER}
    password: ${DB_PW}
    url: ${DB_URL}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        globally_quoted_identifiers: true
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        use_sql_comments: true
        highlight_sql: true
    show-sql: true
    defer-datasource-initialization: true

  data:
    redis:
      port: 6379
      host: localhost

  cloud:
    gcp:
      storage:
        bucket: ${GCP_BUCKET}

  sql:
    init:
      mode: always


logging:
  level.org.hibernate:
    SQL: INFO
    orm.jdbc.bind: INFO

jwt:
  secret-key: ${JWT_KEY}
  access-expired-time-ms: 6000000
  refresh-expiration-time: 60000000


portone:
  api:
    key: dsa # V2 API Key
  secret:
    api: ${API_SECRET_KEY} # V2 API 시크릿
    webhook: ${API_SECRET_WEBHOOK} # V2 웹훅 시크릿
---
spring:
  config:
    activate:
      on-profile: prod
  docker:
    compose:
      file: docker-compose.prod.yml

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_USER}
    password: ${DB_PW}
    url: ${DB_URL}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        globally_quoted_identifiers: true
        format_sql: false
        show_sql: false
        dialect: org.hibernate.dialect.MariaDBDialect
        use_sql_comments: false
        highlight_sql: false
    show-sql: false
    defer-datasource-initialization: false

  data:
    redis:
      port: 6379
      host: redis

  cloud:
    gcp:
      storage:
        bucket: ${GCP_BUCKET}

  sql:
    init:
      mode: always  # 차후 수정예정


logging:
  level.org.hibernate:
    SQL: INFO
    orm.jdbc.bind: INFO

jwt:
  secret-key: ${JWT_KEY}
  access-expired-time-ms: 600000  # 10min
  refresh-expiration-time: 6000000 # 100min


portone:
  api:
    key: dsa # V2 API Key
  secret:
    api: ${API_SECRET_KEY} # V2 API 시크릿
    webhook: ${API_SECRET_WEBHOOK} # V2 웹훅 시크릿